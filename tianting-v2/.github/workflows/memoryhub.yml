name: MemoryHub CI

on:
  push:
    branches: [ main, 'feat/**' ]
    paths: 
      - 'tianting-v2/**'
      - '.github/workflows/memoryhub.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'tianting-v2/**'
      - '.github/workflows/memoryhub.yml'

defaults:
  run:
    working-directory: tianting-v2

jobs:
  test-linux:
    name: "Linux Tests & Benchmark"
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libboost-dev python3-dev build-essential
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e src/
        
    - name: Run unit tests
      run: |
        python -m pytest tests/test_memoryhub/ -v
        
    - name: Run performance benchmark (10k/500)
      run: |
        python scripts/benchmark_memoryhub.py --memories 10000 --recalls 500 --index roaring
        
    - name: Verify integrity
      run: |
        python scripts/benchmark_memoryhub.py --quick --index roaring
        if [ $? -ne 0 ]; then
          echo "❌ Quick benchmark failed on Linux"
          exit 1
        fi

  test-windows:
    name: "Windows Tests & Benchmark"
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e src/
        
    - name: Run unit tests
      run: |
        python -m pytest tests/test_memoryhub/ -v
        
    - name: Run performance benchmark (1k/50)
      run: |
        python scripts/benchmark_memoryhub.py --memories 1000 --recalls 50 --index roaring
        
    - name: Test resource management (Windows-specific)
      run: |
        python -m pytest tests/test_memoryhub/test_roaring_bitmap_tag_index.py -k "Windows" -v
        
  verify-docs:
    name: "Documentation Verification"
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install
        
    - name: Lint OES specifications
      run: |
        npm run lint-oes
        
    - name: Verify documentation status
      run: |
        npm run lint-doc-status
        
    - name: Check benchmark integrity
      run: |
        # Verify benchmark script hasn't been tampered with
        if [ -f .benchmark.lock ]; then
          echo "Checking benchmark integrity..."
          sha256sum -c .benchmark.lock
        fi

  integration:
    name: "Integration Tests"
    runs-on: ubuntu-latest
    needs: [test-linux, test-windows, verify-docs]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libboost-dev python3-dev build-essential
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e src/
        
    - name: Test CLI tool
      run: |
        # Test CLI commands
        python scripts/memoryhub_cli.py --help
        python scripts/memoryhub_cli.py info
        python scripts/memoryhub_cli.py stats
        
    - name: Cross-platform compatibility test
      run: |
        # Test both roaring and fallback modes
        python scripts/benchmark_memoryhub.py --quick --index roaring
        python scripts/benchmark_memoryhub.py --quick --index text
        
    - name: Performance regression test
      run: |
        # Ensure performance targets are met
        result=$(python scripts/benchmark_memoryhub.py --memories 5000 --recalls 250 --index roaring)
        echo "$result"
        if echo "$result" | grep -q "PERFORMANCE TARGET FAILED"; then
          echo "❌ Performance regression detected"
          exit 1
        fi
        echo "✅ Performance targets met"